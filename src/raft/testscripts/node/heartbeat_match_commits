# A heartbeat response can advance a follower match index and commit+apply.

cluster nodes=3 leader=1
---
n1@1 leader last=1@1 commit=1@1 applied=1 progress={2:1→2 3:1→2}
n2@1 follower(n1) last=1@1 commit=1@1 applied=1
n3@1 follower(n1) last=1@1 commit=1@1 applied=1

# Submit a write to the leader.
put 1 foo=bar
---
c1@1 → n1 ClientRequest id=0x01 write 0x0103666f6f03626172
n1@1 append 2@1 put foo=bar
n1@1 → n2 Append base=1@1 [2@1]
n1@1 → n3 Append base=1@1 [2@1]

# Partition n1 away from the followers as they send the append acks, then heal
# the partition.
partition 1
---
n1 ⇹ n2 n3

stabilize
---
n2@1 append 2@1 put foo=bar
n2@1 ⇥ n1 A̶p̶p̶e̶n̶d̶R̶e̶s̶p̶o̶n̶s̶e̶ ̶m̶a̶t̶c̶h̶_̶i̶n̶d̶e̶x̶=̶2̶
n3@1 append 2@1 put foo=bar
n3@1 ⇥ n1 A̶p̶p̶e̶n̶d̶R̶e̶s̶p̶o̶n̶s̶e̶ ̶m̶a̶t̶c̶h̶_̶i̶n̶d̶e̶x̶=̶2̶

heal
---
n1 n2 n3 fully connected

# The write has been replicated, but not yet committed and applied.
status
---
n1@1 leader last=2@1 commit=1@1 applied=1 progress={2:1→3 3:1→3}
n2@1 follower(n1) last=2@1 commit=1@1 applied=1
n3@1 follower(n1) last=2@1 commit=1@1 applied=1

# The leader heartbeats. The followers confirm they are caught up.
heartbeat 1
deliver
---
n1@1 → n2 Heartbeat last_index=2 commit_index=1 read_seq=0
n1@1 → n3 Heartbeat last_index=2 commit_index=1 read_seq=0
n2@1 → n1 HeartbeatResponse match_index=2 read_seq=0
n3@1 → n1 HeartbeatResponse match_index=2 read_seq=0

# When the leader receives the first heartbeat, it commits and applies
# the write.
deliver 1 from=2
---
n1@1 commit 2@1
n1@1 apply 2@1 put foo=bar
n1@1 → c1 ClientResponse id=0x01 write 0x0102
c1@1 put foo=bar ⇒ 2

status 1
---
n1@1 leader last=2@1 commit=2@1 applied=2 progress={2:2→3 3:1→3}

# Delivery of the second heartbeat advances the match index, but
# there is nothing more to do.
deliver
status
---
n1@1 leader last=2@1 commit=2@1 applied=2 progress={2:2→3 3:2→3}
n2@1 follower(n1) last=2@1 commit=1@1 applied=1
n3@1 follower(n1) last=2@1 commit=1@1 applied=1
