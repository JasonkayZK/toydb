# A heartbeat from a leader should convert a candidate in the same term to a
# follower.

cluster nodes=3
---
n1@0 follower() last=0@0 commit=0@0 applied=0
n2@0 follower() last=0@0 commit=0@0 applied=0
n3@0 follower() last=0@0 commit=0@0 applied=0

# Partition n3 away from the cluster.
partition 3
---
n3 ⇹ n1 n2

# Both n1 and n3 campaign. n2 votes for n1.
campaign 1 3
deliver
---
n1@0 follower() ⇨ n1@1 candidate
n1@1 → n2 Campaign last=0@0
n1@1 ⇥ n3 C̶a̶m̶p̶a̶i̶g̶n̶ ̶l̶a̶s̶t̶=̶0̶@̶0̶
n3@0 follower() ⇨ n3@1 candidate
n3@1 ⇥ n1 C̶a̶m̶p̶a̶i̶g̶n̶ ̶l̶a̶s̶t̶=̶0̶@̶0̶
n3@1 ⇥ n2 C̶a̶m̶p̶a̶i̶g̶n̶ ̶l̶a̶s̶t̶=̶0̶@̶0̶
n2@0 follower() ⇨ n2@1 follower()
n2@1 → n1 CampaignResponse vote=true

# n1 assumes leadership and heartbeats, committing entry 1.
(stabilize heartbeat=true)
status
---
n1@1 leader last=1@1 commit=1@1 applied=1 progress={2:1→2 3:0→2}
n2@1 follower(n1) last=1@1 commit=1@1 applied=1
n3@1 candidate last=0@0 commit=0@0 applied=0

# Heal the partition.
heal
---
n1 n2 n3 fully connected

# The next heartbeat from n1 converts n3 to a follower in term 1.
heartbeat 1
stabilize
---
n1@1 → n2 Heartbeat last_index=1 commit_index=1 read_seq=0
n1@1 → n3 Heartbeat last_index=1 commit_index=1 read_seq=0
n2@1 → n1 HeartbeatResponse match_index=1 read_seq=0
n3@1 candidate ⇨ n3@1 follower(n1)
n3@1 → n1 HeartbeatResponse match_index=0 read_seq=0
n1@1 → n3 Append base=0@0 [1@1]
n3@1 append 1@1 None
n3@1 → n1 AppendResponse match_index=1

status
---
n1@1 leader last=1@1 commit=1@1 applied=1 progress={2:1→2 3:1→2}
n2@1 follower(n1) last=1@1 commit=1@1 applied=1
n3@1 follower(n1) last=1@1 commit=0@0 applied=0
