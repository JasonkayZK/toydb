# Large appends are limited to MAX_APPEND_ENTRIES, and each successful append
# triggers the next append batch.

cluster nodes=3 leader=1 max_append_entries=2
---
n1@1 leader last=1@1 commit=1@1 applied=1 progress={2:1→2 3:1→2}
n2@1 follower(n1) last=1@1 commit=1@1 applied=1
n3@1 follower(n1) last=1@1 commit=1@1 applied=1

# Partition n3.
partition 3
---
n3 ⇹ n1 n2

# Make a bunch of writes.
(put 1 a=1)
(put 1 a=2)
(put 1 a=3)
(put 1 a=4)
(put 1 a=5)
(put 1 a=6)
(put 1 a=7)
(stabilize heartbeat=true)
status
---
n1@1 leader last=8@1 commit=8@1 applied=8 progress={2:8→9 3:1→9}
n2@1 follower(n1) last=8@1 commit=8@1 applied=8
n3@1 follower(n1) last=1@1 commit=1@1 applied=1

# Heal the partition.
heal
---
n1 n2 n3 fully connected

# The next heartbeat triggers a probe.
heartbeat 1
deliver
deliver
deliver
---
n1@1 → n2 Heartbeat last_index=8 commit_index=8 read_seq=0
n1@1 → n3 Heartbeat last_index=8 commit_index=8 read_seq=0
n2@1 → n1 HeartbeatResponse match_index=8 read_seq=0
n3@1 → n1 HeartbeatResponse match_index=0 read_seq=0
n1@1 → n3 Append base=7@1 []
n3@1 → n1 AppendResponse reject_index=2

# When the leader receives the probe response, it begins appending in batches of
# max_append_entries until the follower is caught up.
stabilize
---
n1@1 → n3 Append base=1@1 [2@1 3@1]
n3@1 append 2@1 put a=1
n3@1 append 3@1 put a=2
n3@1 → n1 AppendResponse match_index=3
n1@1 → n3 Append base=3@1 [4@1 5@1]
n3@1 append 4@1 put a=3
n3@1 append 5@1 put a=4
n3@1 → n1 AppendResponse match_index=5
n1@1 → n3 Append base=5@1 [6@1 7@1]
n3@1 append 6@1 put a=5
n3@1 append 7@1 put a=6
n3@1 → n1 AppendResponse match_index=7
n1@1 → n3 Append base=7@1 [8@1]
n3@1 append 8@1 put a=7
n3@1 → n1 AppendResponse match_index=8
