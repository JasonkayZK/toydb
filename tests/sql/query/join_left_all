Query: SELECT * FROM movies m LEFT JOIN genres g ON m.id = g.id

Explain:
HashJoin: outer on m.id = g.id
├─ Scan: movies as m
└─ Scan: genres as g

Result: ["id", "title", "studio_id", "genre_id", "released", "rating", "ultrahd", "id", "name"]
[Integer(1), String("Stalker"), Integer(1), Integer(1), Integer(1979), Float(8.2), Null, Integer(1), String("Science Fiction")]
[Integer(2), String("Sicario"), Integer(2), Integer(2), Integer(2015), Float(7.6), Boolean(true), Integer(2), String("Action")]
[Integer(3), String("Primer"), Integer(3), Integer(1), Integer(2004), Float(6.9), Null, Integer(3), String("Comedy")]
[Integer(4), String("Heat"), Integer(4), Integer(2), Integer(1995), Float(8.2), Boolean(true), Null, Null]
[Integer(5), String("The Fountain"), Integer(4), Integer(1), Integer(2006), Float(7.2), Boolean(false), Null, Null]
[Integer(6), String("Solaris"), Integer(1), Integer(1), Integer(1972), Float(8.1), Null, Null, Null]
[Integer(7), String("Gravity"), Integer(4), Integer(1), Integer(2013), Float(7.7), Boolean(true), Null, Null]
[Integer(8), String("Blindspotting"), Integer(2), Integer(3), Integer(2018), Float(7.4), Boolean(true), Null, Null]
[Integer(9), String("Birdman"), Integer(4), Integer(3), Integer(2014), Float(7.7), Boolean(true), Null, Null]
[Integer(10), String("Inception"), Integer(4), Integer(1), Integer(2010), Float(8.8), Boolean(true), Null, Null]

AST: Select {
    select: [],
    from: [
        Join {
            left: Table {
                name: "movies",
                alias: Some(
                    "m",
                ),
            },
            right: Table {
                name: "genres",
                alias: Some(
                    "g",
                ),
            },
            type: Left,
            predicate: Some(
                Operator(
                    Equal(
                        Field(
                            Some(
                                "m",
                            ),
                            "id",
                        ),
                        Field(
                            Some(
                                "g",
                            ),
                            "id",
                        ),
                    ),
                ),
            ),
        },
    ],
    where: None,
    group_by: [],
    having: None,
    order: [],
    offset: None,
    limit: None,
}

Plan: Select {
    root: NestedLoopJoin {
        left: Scan {
            table: Table {
                name: "movies",
                primary_key: 0,
                columns: [
                    Column {
                        name: "id",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: true,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "title",
                        datatype: String,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "studio_id",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: true,
                        references: Some(
                            "studios",
                        ),
                    },
                    Column {
                        name: "genre_id",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: true,
                        references: Some(
                            "genres",
                        ),
                    },
                    Column {
                        name: "released",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "rating",
                        datatype: Float,
                        nullable: true,
                        default: Some(
                            Null,
                        ),
                        unique: false,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "ultrahd",
                        datatype: Boolean,
                        nullable: true,
                        default: Some(
                            Null,
                        ),
                        unique: false,
                        index: false,
                        references: None,
                    },
                ],
            },
            filter: None,
            alias: Some(
                "m",
            ),
        },
        left_size: 7,
        right: Scan {
            table: Table {
                name: "genres",
                primary_key: 0,
                columns: [
                    Column {
                        name: "id",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: true,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "name",
                        datatype: String,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: false,
                        references: None,
                    },
                ],
            },
            filter: None,
            alias: Some(
                "g",
            ),
        },
        right_size: 2,
        predicate: Some(
            Equal(
                Field(
                    0,
                    Qualified(
                        "m",
                        "id",
                    ),
                ),
                Field(
                    7,
                    Qualified(
                        "g",
                        "id",
                    ),
                ),
            ),
        ),
        outer: true,
    },
    labels: [
        Qualified(
            "m",
            "id",
        ),
        Qualified(
            "m",
            "title",
        ),
        Qualified(
            "m",
            "studio_id",
        ),
        Qualified(
            "m",
            "genre_id",
        ),
        Qualified(
            "m",
            "released",
        ),
        Qualified(
            "m",
            "rating",
        ),
        Qualified(
            "m",
            "ultrahd",
        ),
        Qualified(
            "g",
            "id",
        ),
        Qualified(
            "g",
            "name",
        ),
    ],
}

Optimized plan: Select {
    root: HashJoin {
        left: Scan {
            table: Table {
                name: "movies",
                primary_key: 0,
                columns: [
                    Column {
                        name: "id",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: true,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "title",
                        datatype: String,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "studio_id",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: true,
                        references: Some(
                            "studios",
                        ),
                    },
                    Column {
                        name: "genre_id",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: true,
                        references: Some(
                            "genres",
                        ),
                    },
                    Column {
                        name: "released",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "rating",
                        datatype: Float,
                        nullable: true,
                        default: Some(
                            Null,
                        ),
                        unique: false,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "ultrahd",
                        datatype: Boolean,
                        nullable: true,
                        default: Some(
                            Null,
                        ),
                        unique: false,
                        index: false,
                        references: None,
                    },
                ],
            },
            filter: None,
            alias: Some(
                "m",
            ),
        },
        left_field: 0,
        left_label: Qualified(
            "m",
            "id",
        ),
        right: Scan {
            table: Table {
                name: "genres",
                primary_key: 0,
                columns: [
                    Column {
                        name: "id",
                        datatype: Integer,
                        nullable: false,
                        default: None,
                        unique: true,
                        index: false,
                        references: None,
                    },
                    Column {
                        name: "name",
                        datatype: String,
                        nullable: false,
                        default: None,
                        unique: false,
                        index: false,
                        references: None,
                    },
                ],
            },
            filter: None,
            alias: Some(
                "g",
            ),
        },
        right_field: 0,
        right_label: Qualified(
            "g",
            "id",
        ),
        right_size: 2,
        outer: true,
    },
    labels: [
        Qualified(
            "m",
            "id",
        ),
        Qualified(
            "m",
            "title",
        ),
        Qualified(
            "m",
            "studio_id",
        ),
        Qualified(
            "m",
            "genre_id",
        ),
        Qualified(
            "m",
            "released",
        ),
        Qualified(
            "m",
            "rating",
        ),
        Qualified(
            "m",
            "ultrahd",
        ),
        Qualified(
            "g",
            "id",
        ),
        Qualified(
            "g",
            "name",
        ),
    ],
}

