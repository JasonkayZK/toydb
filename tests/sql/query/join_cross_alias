Query: 
        SELECT m.id, m.title, g.id, g.name, c.id, c.name
        FROM movies AS m CROSS JOIN genres g CROSS JOIN countries c
        WHERE m.id >= 3 AND g.id = 2 AND c.id != 'us'
    

Explain:
Projection: m.id, m.title, g.id, g.name, c.id, c.name
└─ NestedLoopJoin: inner
   ├─ NestedLoopJoin: inner
   │  ├─ Scan: movies as m (m.id > 3 OR m.id = 3)
   │  └─ KeyLookup: genres as g (2)
   └─ Scan: countries as c (NOT c.id = us)

Result: ["id", "title", "id", "name", "id", "name"]
[Integer(3), String("Primer"), Integer(2), String("Action"), String("fr"), String("France")]
[Integer(3), String("Primer"), Integer(2), String("Action"), String("ru"), String("Russia")]
[Integer(4), String("Heat"), Integer(2), String("Action"), String("fr"), String("France")]
[Integer(4), String("Heat"), Integer(2), String("Action"), String("ru"), String("Russia")]
[Integer(5), String("The Fountain"), Integer(2), String("Action"), String("fr"), String("France")]
[Integer(5), String("The Fountain"), Integer(2), String("Action"), String("ru"), String("Russia")]
[Integer(6), String("Solaris"), Integer(2), String("Action"), String("fr"), String("France")]
[Integer(6), String("Solaris"), Integer(2), String("Action"), String("ru"), String("Russia")]
[Integer(7), String("Gravity"), Integer(2), String("Action"), String("fr"), String("France")]
[Integer(7), String("Gravity"), Integer(2), String("Action"), String("ru"), String("Russia")]
[Integer(8), String("Blindspotting"), Integer(2), String("Action"), String("fr"), String("France")]
[Integer(8), String("Blindspotting"), Integer(2), String("Action"), String("ru"), String("Russia")]
[Integer(9), String("Birdman"), Integer(2), String("Action"), String("fr"), String("France")]
[Integer(9), String("Birdman"), Integer(2), String("Action"), String("ru"), String("Russia")]
[Integer(10), String("Inception"), Integer(2), String("Action"), String("fr"), String("France")]
[Integer(10), String("Inception"), Integer(2), String("Action"), String("ru"), String("Russia")]

AST: Select {
    select: [
        (
            Field(
                Some(
                    "m",
                ),
                "id",
            ),
            None,
        ),
        (
            Field(
                Some(
                    "m",
                ),
                "title",
            ),
            None,
        ),
        (
            Field(
                Some(
                    "g",
                ),
                "id",
            ),
            None,
        ),
        (
            Field(
                Some(
                    "g",
                ),
                "name",
            ),
            None,
        ),
        (
            Field(
                Some(
                    "c",
                ),
                "id",
            ),
            None,
        ),
        (
            Field(
                Some(
                    "c",
                ),
                "name",
            ),
            None,
        ),
    ],
    from: [
        Join {
            left: Join {
                left: Table {
                    name: "movies",
                    alias: Some(
                        "m",
                    ),
                },
                right: Table {
                    name: "genres",
                    alias: Some(
                        "g",
                    ),
                },
                type: Cross,
                predicate: None,
            },
            right: Table {
                name: "countries",
                alias: Some(
                    "c",
                ),
            },
            type: Cross,
            predicate: None,
        },
    ],
    where: Some(
        Operator(
            And(
                Operator(
                    And(
                        Operator(
                            GreaterThanOrEqual(
                                Field(
                                    Some(
                                        "m",
                                    ),
                                    "id",
                                ),
                                Literal(
                                    Integer(
                                        3,
                                    ),
                                ),
                            ),
                        ),
                        Operator(
                            Equal(
                                Field(
                                    Some(
                                        "g",
                                    ),
                                    "id",
                                ),
                                Literal(
                                    Integer(
                                        2,
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                Operator(
                    NotEqual(
                        Field(
                            Some(
                                "c",
                            ),
                            "id",
                        ),
                        Literal(
                            String(
                                "us",
                            ),
                        ),
                    ),
                ),
            ),
        ),
    ),
    group_by: [],
    having: None,
    order: [],
    offset: None,
    limit: None,
}

Plan: Select {
    root: Projection {
        source: Filter {
            source: NestedLoopJoin {
                left: NestedLoopJoin {
                    left: Scan {
                        table: Table {
                            name: "movies",
                            primary_key: 0,
                            columns: [
                                Column {
                                    name: "id",
                                    datatype: Integer,
                                    nullable: false,
                                    default: None,
                                    unique: true,
                                    index: false,
                                    references: None,
                                },
                                Column {
                                    name: "title",
                                    datatype: String,
                                    nullable: false,
                                    default: None,
                                    unique: false,
                                    index: false,
                                    references: None,
                                },
                                Column {
                                    name: "studio_id",
                                    datatype: Integer,
                                    nullable: false,
                                    default: None,
                                    unique: false,
                                    index: true,
                                    references: Some(
                                        "studios",
                                    ),
                                },
                                Column {
                                    name: "genre_id",
                                    datatype: Integer,
                                    nullable: false,
                                    default: None,
                                    unique: false,
                                    index: true,
                                    references: Some(
                                        "genres",
                                    ),
                                },
                                Column {
                                    name: "released",
                                    datatype: Integer,
                                    nullable: false,
                                    default: None,
                                    unique: false,
                                    index: false,
                                    references: None,
                                },
                                Column {
                                    name: "rating",
                                    datatype: Float,
                                    nullable: true,
                                    default: Some(
                                        Null,
                                    ),
                                    unique: false,
                                    index: false,
                                    references: None,
                                },
                                Column {
                                    name: "ultrahd",
                                    datatype: Boolean,
                                    nullable: true,
                                    default: Some(
                                        Null,
                                    ),
                                    unique: false,
                                    index: false,
                                    references: None,
                                },
                            ],
                        },
                        filter: None,
                        alias: Some(
                            "m",
                        ),
                    },
                    left_size: 7,
                    right: Scan {
                        table: Table {
                            name: "genres",
                            primary_key: 0,
                            columns: [
                                Column {
                                    name: "id",
                                    datatype: Integer,
                                    nullable: false,
                                    default: None,
                                    unique: true,
                                    index: false,
                                    references: None,
                                },
                                Column {
                                    name: "name",
                                    datatype: String,
                                    nullable: false,
                                    default: None,
                                    unique: false,
                                    index: false,
                                    references: None,
                                },
                            ],
                        },
                        filter: None,
                        alias: Some(
                            "g",
                        ),
                    },
                    right_size: 2,
                    predicate: None,
                    outer: false,
                },
                left_size: 9,
                right: Scan {
                    table: Table {
                        name: "countries",
                        primary_key: 0,
                        columns: [
                            Column {
                                name: "id",
                                datatype: String,
                                nullable: false,
                                default: None,
                                unique: true,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "name",
                                datatype: String,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: false,
                                references: None,
                            },
                        ],
                    },
                    filter: None,
                    alias: Some(
                        "c",
                    ),
                },
                right_size: 2,
                predicate: None,
                outer: false,
            },
            predicate: And(
                And(
                    Or(
                        GreaterThan(
                            Field(
                                0,
                                Qualified(
                                    "m",
                                    "id",
                                ),
                            ),
                            Constant(
                                Integer(
                                    3,
                                ),
                            ),
                        ),
                        Equal(
                            Field(
                                0,
                                Qualified(
                                    "m",
                                    "id",
                                ),
                            ),
                            Constant(
                                Integer(
                                    3,
                                ),
                            ),
                        ),
                    ),
                    Equal(
                        Field(
                            7,
                            Qualified(
                                "g",
                                "id",
                            ),
                        ),
                        Constant(
                            Integer(
                                2,
                            ),
                        ),
                    ),
                ),
                Not(
                    Equal(
                        Field(
                            9,
                            Qualified(
                                "c",
                                "id",
                            ),
                        ),
                        Constant(
                            String(
                                "us",
                            ),
                        ),
                    ),
                ),
            ),
        },
        expressions: [
            Field(
                0,
                Qualified(
                    "m",
                    "id",
                ),
            ),
            Field(
                1,
                Qualified(
                    "m",
                    "title",
                ),
            ),
            Field(
                7,
                Qualified(
                    "g",
                    "id",
                ),
            ),
            Field(
                8,
                Qualified(
                    "g",
                    "name",
                ),
            ),
            Field(
                9,
                Qualified(
                    "c",
                    "id",
                ),
            ),
            Field(
                10,
                Qualified(
                    "c",
                    "name",
                ),
            ),
        ],
        labels: [
            None,
            None,
            None,
            None,
            None,
            None,
        ],
    },
    labels: [
        Qualified(
            "m",
            "id",
        ),
        Qualified(
            "m",
            "title",
        ),
        Qualified(
            "g",
            "id",
        ),
        Qualified(
            "g",
            "name",
        ),
        Qualified(
            "c",
            "id",
        ),
        Qualified(
            "c",
            "name",
        ),
    ],
}

Optimized plan: Select {
    root: Projection {
        source: NestedLoopJoin {
            left: NestedLoopJoin {
                left: Scan {
                    table: Table {
                        name: "movies",
                        primary_key: 0,
                        columns: [
                            Column {
                                name: "id",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: true,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "title",
                                datatype: String,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "studio_id",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: true,
                                references: Some(
                                    "studios",
                                ),
                            },
                            Column {
                                name: "genre_id",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: true,
                                references: Some(
                                    "genres",
                                ),
                            },
                            Column {
                                name: "released",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "rating",
                                datatype: Float,
                                nullable: true,
                                default: Some(
                                    Null,
                                ),
                                unique: false,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "ultrahd",
                                datatype: Boolean,
                                nullable: true,
                                default: Some(
                                    Null,
                                ),
                                unique: false,
                                index: false,
                                references: None,
                            },
                        ],
                    },
                    filter: Some(
                        Or(
                            GreaterThan(
                                Field(
                                    0,
                                    Qualified(
                                        "m",
                                        "id",
                                    ),
                                ),
                                Constant(
                                    Integer(
                                        3,
                                    ),
                                ),
                            ),
                            Equal(
                                Field(
                                    0,
                                    Qualified(
                                        "m",
                                        "id",
                                    ),
                                ),
                                Constant(
                                    Integer(
                                        3,
                                    ),
                                ),
                            ),
                        ),
                    ),
                    alias: Some(
                        "m",
                    ),
                },
                left_size: 7,
                right: KeyLookup {
                    table: "genres",
                    keys: [
                        Integer(
                            2,
                        ),
                    ],
                    alias: Some(
                        "g",
                    ),
                },
                right_size: 2,
                predicate: None,
                outer: false,
            },
            left_size: 9,
            right: Scan {
                table: Table {
                    name: "countries",
                    primary_key: 0,
                    columns: [
                        Column {
                            name: "id",
                            datatype: String,
                            nullable: false,
                            default: None,
                            unique: true,
                            index: false,
                            references: None,
                        },
                        Column {
                            name: "name",
                            datatype: String,
                            nullable: false,
                            default: None,
                            unique: false,
                            index: false,
                            references: None,
                        },
                    ],
                },
                filter: Some(
                    Not(
                        Equal(
                            Field(
                                0,
                                Qualified(
                                    "c",
                                    "id",
                                ),
                            ),
                            Constant(
                                String(
                                    "us",
                                ),
                            ),
                        ),
                    ),
                ),
                alias: Some(
                    "c",
                ),
            },
            right_size: 2,
            predicate: None,
            outer: false,
        },
        expressions: [
            Field(
                0,
                Qualified(
                    "m",
                    "id",
                ),
            ),
            Field(
                1,
                Qualified(
                    "m",
                    "title",
                ),
            ),
            Field(
                7,
                Qualified(
                    "g",
                    "id",
                ),
            ),
            Field(
                8,
                Qualified(
                    "g",
                    "name",
                ),
            ),
            Field(
                9,
                Qualified(
                    "c",
                    "id",
                ),
            ),
            Field(
                10,
                Qualified(
                    "c",
                    "name",
                ),
            ),
        ],
        labels: [
            None,
            None,
            None,
            None,
            None,
            None,
        ],
    },
    labels: [
        Qualified(
            "m",
            "id",
        ),
        Qualified(
            "m",
            "title",
        ),
        Qualified(
            "g",
            "id",
        ),
        Qualified(
            "g",
            "name",
        ),
        Qualified(
            "c",
            "id",
        ),
        Qualified(
            "c",
            "name",
        ),
    ],
}

