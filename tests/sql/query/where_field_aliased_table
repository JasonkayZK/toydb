Query: SELECT m.id, g.id FROM movies m, genres g WHERE m.id >= 3 AND g.id = 1

Explain:
Projection: m.id, g.id
└─ NestedLoopJoin: inner
   ├─ Scan: movies as m (m.id > 3 OR m.id = 3)
   └─ KeyLookup: genres as g (1)

Result: ["id", "id"]
[Integer(3), Integer(1)]
[Integer(4), Integer(1)]
[Integer(5), Integer(1)]
[Integer(6), Integer(1)]
[Integer(7), Integer(1)]
[Integer(8), Integer(1)]
[Integer(9), Integer(1)]
[Integer(10), Integer(1)]

AST: Select {
    select: [
        (
            Field(
                Some(
                    "m",
                ),
                "id",
            ),
            None,
        ),
        (
            Field(
                Some(
                    "g",
                ),
                "id",
            ),
            None,
        ),
    ],
    from: [
        Table {
            name: "movies",
            alias: Some(
                "m",
            ),
        },
        Table {
            name: "genres",
            alias: Some(
                "g",
            ),
        },
    ],
    where: Some(
        Operator(
            And(
                Operator(
                    GreaterThanOrEqual(
                        Field(
                            Some(
                                "m",
                            ),
                            "id",
                        ),
                        Literal(
                            Integer(
                                3,
                            ),
                        ),
                    ),
                ),
                Operator(
                    Equal(
                        Field(
                            Some(
                                "g",
                            ),
                            "id",
                        ),
                        Literal(
                            Integer(
                                1,
                            ),
                        ),
                    ),
                ),
            ),
        ),
    ),
    group_by: [],
    having: None,
    order: [],
    offset: None,
    limit: None,
}

Plan: Select {
    root: Projection {
        source: Filter {
            source: NestedLoopJoin {
                left: Scan {
                    table: Table {
                        name: "movies",
                        primary_key: 0,
                        columns: [
                            Column {
                                name: "id",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: true,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "title",
                                datatype: String,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "studio_id",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: true,
                                references: Some(
                                    "studios",
                                ),
                            },
                            Column {
                                name: "genre_id",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: true,
                                references: Some(
                                    "genres",
                                ),
                            },
                            Column {
                                name: "released",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "rating",
                                datatype: Float,
                                nullable: true,
                                default: Some(
                                    Null,
                                ),
                                unique: false,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "ultrahd",
                                datatype: Boolean,
                                nullable: true,
                                default: Some(
                                    Null,
                                ),
                                unique: false,
                                index: false,
                                references: None,
                            },
                        ],
                    },
                    filter: None,
                    alias: Some(
                        "m",
                    ),
                },
                left_size: 7,
                right: Scan {
                    table: Table {
                        name: "genres",
                        primary_key: 0,
                        columns: [
                            Column {
                                name: "id",
                                datatype: Integer,
                                nullable: false,
                                default: None,
                                unique: true,
                                index: false,
                                references: None,
                            },
                            Column {
                                name: "name",
                                datatype: String,
                                nullable: false,
                                default: None,
                                unique: false,
                                index: false,
                                references: None,
                            },
                        ],
                    },
                    filter: None,
                    alias: Some(
                        "g",
                    ),
                },
                right_size: 2,
                predicate: None,
                outer: false,
            },
            predicate: And(
                Or(
                    GreaterThan(
                        Field(
                            0,
                            Qualified(
                                "m",
                                "id",
                            ),
                        ),
                        Constant(
                            Integer(
                                3,
                            ),
                        ),
                    ),
                    Equal(
                        Field(
                            0,
                            Qualified(
                                "m",
                                "id",
                            ),
                        ),
                        Constant(
                            Integer(
                                3,
                            ),
                        ),
                    ),
                ),
                Equal(
                    Field(
                        7,
                        Qualified(
                            "g",
                            "id",
                        ),
                    ),
                    Constant(
                        Integer(
                            1,
                        ),
                    ),
                ),
            ),
        },
        expressions: [
            Field(
                0,
                Qualified(
                    "m",
                    "id",
                ),
            ),
            Field(
                7,
                Qualified(
                    "g",
                    "id",
                ),
            ),
        ],
        labels: [
            None,
            None,
        ],
    },
    labels: [
        Qualified(
            "m",
            "id",
        ),
        Qualified(
            "g",
            "id",
        ),
    ],
}

Optimized plan: Select {
    root: Projection {
        source: NestedLoopJoin {
            left: Scan {
                table: Table {
                    name: "movies",
                    primary_key: 0,
                    columns: [
                        Column {
                            name: "id",
                            datatype: Integer,
                            nullable: false,
                            default: None,
                            unique: true,
                            index: false,
                            references: None,
                        },
                        Column {
                            name: "title",
                            datatype: String,
                            nullable: false,
                            default: None,
                            unique: false,
                            index: false,
                            references: None,
                        },
                        Column {
                            name: "studio_id",
                            datatype: Integer,
                            nullable: false,
                            default: None,
                            unique: false,
                            index: true,
                            references: Some(
                                "studios",
                            ),
                        },
                        Column {
                            name: "genre_id",
                            datatype: Integer,
                            nullable: false,
                            default: None,
                            unique: false,
                            index: true,
                            references: Some(
                                "genres",
                            ),
                        },
                        Column {
                            name: "released",
                            datatype: Integer,
                            nullable: false,
                            default: None,
                            unique: false,
                            index: false,
                            references: None,
                        },
                        Column {
                            name: "rating",
                            datatype: Float,
                            nullable: true,
                            default: Some(
                                Null,
                            ),
                            unique: false,
                            index: false,
                            references: None,
                        },
                        Column {
                            name: "ultrahd",
                            datatype: Boolean,
                            nullable: true,
                            default: Some(
                                Null,
                            ),
                            unique: false,
                            index: false,
                            references: None,
                        },
                    ],
                },
                filter: Some(
                    Or(
                        GreaterThan(
                            Field(
                                0,
                                Qualified(
                                    "m",
                                    "id",
                                ),
                            ),
                            Constant(
                                Integer(
                                    3,
                                ),
                            ),
                        ),
                        Equal(
                            Field(
                                0,
                                Qualified(
                                    "m",
                                    "id",
                                ),
                            ),
                            Constant(
                                Integer(
                                    3,
                                ),
                            ),
                        ),
                    ),
                ),
                alias: Some(
                    "m",
                ),
            },
            left_size: 7,
            right: KeyLookup {
                table: "genres",
                keys: [
                    Integer(
                        1,
                    ),
                ],
                alias: Some(
                    "g",
                ),
            },
            right_size: 2,
            predicate: None,
            outer: false,
        },
        expressions: [
            Field(
                0,
                Qualified(
                    "m",
                    "id",
                ),
            ),
            Field(
                7,
                Qualified(
                    "g",
                    "id",
                ),
            ),
        ],
        labels: [
            None,
            None,
        ],
    },
    labels: [
        Qualified(
            "m",
            "id",
        ),
        Qualified(
            "g",
            "id",
        ),
    ],
}

